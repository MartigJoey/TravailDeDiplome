<Application x:Class="CovidPropagation.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:CovidPropagation"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <!-- Icônes -->
            <Image x:Key="play" Source="./Images/play.png" Width="35" Height="35"></Image>
            <Image x:Key="tuneV" Source="./Images/tune-vertical.png" Width="35" Height="35"></Image>
            <Image x:Key="settings" Source="./Images/cog.png" Width="35" Height="35"></Image>

            <!-- Colors -->
            <SolidColorBrush x:Key="windowBackground" Color="#1a1a1a"/>
            <SolidColorBrush x:Key="normalGreen" Color="#16b005"/>            
            <SolidColorBrush x:Key="highlightGreen" Color="#1ad106"/>
            <SolidColorBrush x:Key="foreGroundDark" Color="#1a1a1a"/>
            <SolidColorBrush x:Key="foreGroundLight" Color="White"/>
            <SolidColorBrush x:Key="normalDark" Color="#1a1a1a"/>
            <SolidColorBrush x:Key="lightDark" Color="#2b2b2b"/>
            <SolidColorBrush x:Key="normalGray" Color="#9b9b9b"/>
            <SolidColorBrush x:Key="normalRed" Color="#910000"/>
            <SolidColorBrush x:Key="highlightRed" Color="#ff0000"/>

            <Color x:Key="normalGreenKeyFrame">#17b806</Color>
            <Color x:Key="highlightGreenKeyFrame">#1ad106</Color>
            <Color x:Key="normalDarkKeyFrame">Black</Color>
            <Color x:Key="lightDarkKeyFrame">#0b0b0b</Color>
            <Color x:Key="lightGrayKeyFrame">#2b2b2b</Color>
            <Color x:Key="normalGrayKeyFrame">#9b9b9b</Color>

            <!-- Green button style-->
            <Style x:Key="button"  TargetType="{x:Type Button}">
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Background" Value="{StaticResource normalGreen}" />
                <Setter Property="FontSize" Value="25" />
                <Setter Property="FontWeight" Value="DemiBold" />
                <Setter Property="Foreground" Value="{StaticResource foreGroundDark}" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{StaticResource highlightGreen}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!-- Green small button style-->
            <Style x:Key="smallButton"  TargetType="{x:Type Button}">
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Background" Value="{StaticResource normalGreen}" />
                <Setter Property="FontSize" Value="20" />
                <Setter Property="FontWeight" Value="DemiBold" />
                <Setter Property="Foreground" Value="{StaticResource foreGroundDark}" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{StaticResource highlightGreen}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!-- Maximize - Minimize button style-->
            <Style x:Key="MaximizeMinimizeStyle"  TargetType="{x:Type Button}">
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Background" Value="{StaticResource normalDark}" />
                <Setter Property="FontSize" Value="25" />
                <Setter Property="FontWeight" Value="DemiBold" />
                <Setter Property="Foreground" Value="{StaticResource normalDark}" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Width" Value="40" />
                <Setter Property="Height" Value="25" />
                <Setter Property="Grid.Column" Value="2" />
                <Setter Property="Grid.Row" Value="0" />
                <Setter Property="HorizontalAlignment" Value="Right" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{StaticResource lightDark}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            
            <!-- Close button style-->
            <Style x:Key="CloseStyle"  TargetType="{x:Type Button}">
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Background" Value="{StaticResource normalRed}" />
                <Setter Property="FontSize" Value="25" />
                <Setter Property="FontWeight" Value="DemiBold" />
                <Setter Property="Foreground" Value="#1a1a1a" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Width" Value="40" />
                <Setter Property="Height" Value="25" />
                <Setter Property="HorizontalAlignment" Value="Right" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{StaticResource highlightRed}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!-- Title bar -->
            <DataTemplate x:Key="FilterTypeByTemplateControl">
                <Grid Grid.ColumnSpan="3">
                    <TextBlock MouseDown="TextBlock_MouseDown" Text=" Covid propagation" Foreground="{StaticResource foreGroundLight}" FontSize="15"/>
                    <Button Click="Minimize_Click" Style="{StaticResource MaximizeMinimizeStyle}" Margin="0,0,80,0">
                        <Image Source="./Images/window-minimize.png" Width="20" Height="20"></Image>
                    </Button>
                    <Button Click="Maximize_Click" Style="{StaticResource MaximizeMinimizeStyle}" Margin="0,0,40,0">
                        <Image Source="./Images/window-maximize.png" Width="20" Height="20"></Image>
                    </Button>
                    <Button Click="Close_Click" Style="{StaticResource CloseStyle}" Margin="0,0,0,0">
                        <Image Source="./Images/close.png" Width="20" Height="20"></Image>
                    </Button>
                </Grid>
            </DataTemplate>

            <!-- Slider template -->
            <Style x:Key="SliderButtonStyleLeft" TargetType="{x:Type RepeatButton}">
                <Setter Property="SnapsToDevicePixels" Value="true" />
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Focusable" Value="false" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Border Margin="0" CornerRadius="2" Height="4" Grid.Row="1" BorderThickness="1" Background="{StaticResource normalGreen}" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="SliderButtonStyleRight" TargetType="{x:Type RepeatButton}">
                <Setter Property="SnapsToDevicePixels" Value="true" />
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Focusable" Value="false" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Border Margin="0" CornerRadius="2" Height="4" Grid.Row="1" BorderThickness="1" Background="#2b2b2b" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="SliderThumbStyle" TargetType="{x:Type Thumb}">
                <Setter Property="SnapsToDevicePixels" Value="true" />
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="Height" Value="14" />
                <Setter Property="Width" Value="14" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Ellipse x:Name="Ellipse" StrokeThickness="1" Fill="{StaticResource normalGreen}">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="Ellipse">
                                                    <LinearColorKeyFrame KeyTime="0" Value="{StaticResource normalGreenKeyFrame}" />
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="Ellipse">
                                                    <LinearColorKeyFrame KeyTime="0" Value="{StaticResource highlightGreenKeyFrame}" />
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="Ellipse">
                                                    <LinearColorKeyFrame KeyTime="0" Value="{StaticResource normalDarkKeyFrame}" />
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                            </Ellipse>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <ControlTemplate x:Key="HorizontalSlider" TargetType="{x:Type Slider}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Track Grid.Row="1" x:Name="PART_Track">
                        <Track.DecreaseRepeatButton>
                            <RepeatButton Style="{StaticResource SliderButtonStyleLeft}" Command="Slider.DecreaseLarge" />
                        </Track.DecreaseRepeatButton>
                        <Track.Thumb>
                            <Thumb Style="{StaticResource SliderThumbStyle}" />
                        </Track.Thumb>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton Style="{StaticResource SliderButtonStyleRight}" Command="Slider.IncreaseLarge" />
                        </Track.IncreaseRepeatButton>
                    </Track>
                </Grid>
            </ControlTemplate>
            
            <!-- Radio button template -->
            <Style x:Key="RadioButtonFocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Border>
                              <Rectangle Margin="15,0,0,0" StrokeThickness="1" StrokeDashArray="1 2" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <Style x:Key="{x:Type RadioButton}" TargetType="{x:Type RadioButton}">
                <Setter Property="SnapsToDevicePixels" Value="true" />
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="FocusVisualStyle" Value="{DynamicResource RadioButtonFocusVisual}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RadioButton}">
                            <BulletDecorator Background="Transparent">
                                <BulletDecorator.Bullet>
                                    <Grid Width="13" Height="13">
                                        <Ellipse x:Name="Border" StrokeThickness="1" Stroke="{StaticResource normalGray}" Fill="{StaticResource lightDark}"/>
                                        <Ellipse x:Name="CheckMark" Margin="4" Visibility="Collapsed" Fill="{StaticResource normalGreen}"/>
                                    </Grid>
                                </BulletDecorator.Bullet>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                                    <LinearColorKeyFrame KeyTime="0" Value="{StaticResource lightDarkKeyFrame}" />
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                                    <LinearColorKeyFrame KeyTime="0" Value="{StaticResource highlightGreenKeyFrame}" />
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                                    <LinearColorKeyFrame KeyTime="0" Value="{StaticResource lightGrayKeyFrame}" />
                                                </ColorAnimationUsingKeyFrames>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)">
                                                    <LinearColorKeyFrame KeyTime="0" Value="{StaticResource lightGrayKeyFrame}" />
                                                </ColorAnimationUsingKeyFrames>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                                    <LinearColorKeyFrame KeyTime="0" Value="{StaticResource lightGrayKeyFrame}" />
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="CheckStates">
                                        <VisualState x:Name="Checked">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckMark">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Unchecked" />
                                        <VisualState x:Name="Indeterminate" />
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <ContentPresenter Margin="4,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" RecognizesAccessKey="True" />
                            </BulletDecorator>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Checkbox -->
            <Style x:Key="CheckBoxFocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Border>
                                <Rectangle Margin="15,0,0,0" Stroke="#60000000" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="{x:Type CheckBox}" TargetType="{x:Type CheckBox}">
                <Setter Property="SnapsToDevicePixels" Value="true" />
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="FocusVisualStyle" Value="{DynamicResource CheckBoxFocusVisual}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">
                            <BulletDecorator Background="Transparent">
                                <BulletDecorator.Bullet>
                                    <Border x:Name="Border" Width="13" Height="13" CornerRadius="0" BorderThickness="1">
                                        <Border.BorderBrush>
                                            <SolidColorBrush Color="{DynamicResource normalGrayKeyFrame}"/>
                                        </Border.BorderBrush>
                                        <Border.Background>
                                            <SolidColorBrush Color="{DynamicResource lightGrayKeyFrame}"/>
                                        </Border.Background>
                                        <Grid>
                                            <Path Visibility="Collapsed" Width="7" Height="7" x:Name="CheckMark" SnapsToDevicePixels="False" StrokeThickness="2" Data="M 0 0 L 7 7 M 0 7 L 7 0">
                                                <Path.Stroke>
                                                    <SolidColorBrush Color="{DynamicResource normalGreenKeyFrame}" />
                                                </Path.Stroke>
                                            </Path>
                                        </Grid>
                                    </Border>
                                </BulletDecorator.Bullet>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                    <EasingColorKeyFrame KeyTime="0" Value="{StaticResource normalDarkKeyFrame}" />
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                    <EasingColorKeyFrame KeyTime="0" Value="{StaticResource lightGrayKeyFrame}" />
                                                </ColorAnimationUsingKeyFrames>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                                    <EasingColorKeyFrame KeyTime="0" Value="{StaticResource lightGrayKeyFrame}" />
                                                </ColorAnimationUsingKeyFrames>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                                    <EasingColorKeyFrame KeyTime="0" Value="{StaticResource lightGrayKeyFrame}" />
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                    <EasingColorKeyFrame KeyTime="0" Value="{StaticResource normalDarkKeyFrame}" />
                                                </ColorAnimationUsingKeyFrames>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                                    <EasingColorKeyFrame KeyTime="0" Value="{StaticResource normalDarkKeyFrame}" />
                                                </ColorAnimationUsingKeyFrames>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                                    <EasingColorKeyFrame KeyTime="0" Value="{StaticResource normalDarkKeyFrame}" />
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="CheckStates">
                                        <VisualState x:Name="Checked">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckMark">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Unchecked" />
                                        <VisualState x:Name="Indeterminate">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="InderminateMark">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <ContentPresenter Margin="4,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" RecognizesAccessKey="True" />
                            </BulletDecorator>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>